name: Front — Push

on:
  push:
    branches: [ "**" ]
    paths:
      - 'front/**'
      - '.github/workflows/front-push.yml'

permissions:
  contents: read

jobs:
  frontend:
    name: Front — Build • Tests • Coverage • Sonar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front

    steps:
      - uses: actions/checkout@v4

      - name: Use Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: 'front/package-lock.json'

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1

      - run: npm ci

      - name: Ensure karma-chrome-launcher is present
        run: |
          if ! npm ls karma-chrome-launcher >/dev/null 2>&1; then
            npm i -D karma-chrome-launcher
          fi

      - name: Test (ChromeHeadless + coverage)
        run: npm run test -- --watch=false --code-coverage --browsers=ChromeHeadless
        env:
          CI: "true"

      - name: Debug coverage files
        run: |
          echo "pwd = $(pwd)"
          ls -la coverage || true
          find coverage -name "lcov.info" -maxdepth 3 -print || true

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: front-coverage
          path: front/coverage
          if-no-files-found: warn
          retention-days: 7

      - name: Build (production)
        run: npm run build -- --configuration=production

      # Sonar pour branches ≠ main
      - name: SonarCloud Analyze (branch)
        if: github.ref != 'refs/heads/main'
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: front

      # Sur main, on fait respecter le QG (si QG FAIL -> le job s'arrête, pas de push Docker)
      - name: SonarCloud Analyze (main, enforce QG)
        if: github.ref == 'refs/heads/main'
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: front
          args: -Dsonar.qualitygate.wait=true

      - name: Docker meta (front)
        id: meta_front
        if: github.ref == 'refs/heads/main'
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ vars.DOCKERHUB_NAMESPACE || secrets.DOCKERHUB_USERNAME }}/bobapp-front
          tags: |
            type=ref,event=branch
            type=sha,format=short
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push (front)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta_front.outputs.tags }}
          labels: ${{ steps.meta_front.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
